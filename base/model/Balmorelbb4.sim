* File BB4.sim to the Balmorel model.
* First version 2009(hr). Modified spring 2015 (wx, hr). Present version 20151217(hr).

* This file contains simulation structure for model BALBASE4.
* BALBASE4: optimisation with endogenous investments simultaneuosly for all (S,T) over all Y (or possibly subsets of Y).

* The model is still under developemnt, and the present version is not public.
* The final model will be available from www.balmorel.com under open source conditions.

* Note: although not necessary, there are a number of "$ifi %BB4%==yes" conditions,
* this is to make some of the differences relative to bb123.sim more visible.

*-------------------------------------------------------------------------------
* INITIALISATIONS BEFORE LOOPING OVER $YALIAS%:
*-------------------------------------------------------------------------------

IS3(S)   = YES;
IS3_NEXT(S)=YES;
IS3_ONLYNEXT(S)=YES;

* Initialize the first year in the simulation:


VGKN.L(Y,IA,G)        = 0;
VXKN.l(Y,IR,IRI)      = 0;

IY411PREVY(Y,Y-1)= YES;

*-------------------------------------------------------------------------------
* INITIALISATIONS FOR addons:
*-------------------------------------------------------------------------------
*-------------------------------------------------------------------------------

*----- End of initialisation for the addons  -----------------------------------
*-------------------------------------------------------------------------------

*-------------------------------------------------------------------------------
*----- End of initialisation for annual updating part --------------------------
*-------------------------------------------------------------------------------

* Calculate ISIMWEIGHT for each simyear: Presently ISIMWEIGHT not really in use except here initially.
* ISIMWEIGHT is relevant in case that not all elements in an interval in Y are represented in IY411 (if YMODELDELTA if is larger than 1).
* It this case it might be assumed that the years not represented have the same values as the nearby years tht are elements.
* Hence, by giving the represented years appropriately higher weights a more reasonable balance migth be achieved.
* Presently ISIMWEIGHT not really in use except here initially, and perhaps the thinking as inappropriate.

ISIMWEIGHT(YMODEL) = SUM(IYMODEL4$((1 LT ORD(IYMODEL4)) AND (ORD(IYMODEL4) <= ORD(YMODEL))), YMODELDELTA(IYMODEL4));

*-------------------------------------------------------------------------------
* Initialize total capacity variables to start values.
*-------------------------------------------------------------------------------

*------------------------------------------------------------------------------------------------------------------------------------------------------------
*------------------------------------------------------------------------------------------------------------------------------------------------------------
*------------------------------------------------------------------------------------------------------------------------------------------------------------
* LOOP OVER ALL THE FIRSTYEARS IN ALL MODELS BALBASE4:
*------------------------------------------------------------------------------------------------------------------------------------------------------------
*------------------------------------------------------------------------------------------------------------------------------------------------------------

LOOP(IYALIAS$(CARD(IYALIAS)-ORD(IYALIAS) GE (SUM(YMODEL$(ORD(YMODEL) GT 1), YMODELDELTA(YMODEL)))),

*------------------------------------------------------------------------------
* INITIALISATIONS FOR THE UPDATING PART FOR EACH MODEL BALBASE4:
*------------------------------------------------------------------------------

* -----------------------------------------------------------------------------
* Calculate IORD_IY, and subsets of Y:  TODO: IORD_IY is used only here for assigning the IY4's. Might therefore be eliminated by making some other code.
* IY411: the years in the present Balbase4 model
* IY410: IY411 except last year.
* IY401: IY411 except first year.
* IY411FIRST(IYALIAS): first year in IY411.
* IY4PREVY(IYALIAS): previous year in IY411.
* -----------------------------------------------------------------------------


ISCALAR1 = 0;
LOOP(YMODEL,
   ISCALAR1 = ISCALAR1 + YMODELDELTA(YMODEL)$(ORD(YMODEL) GT 1);
   LOOP(IYALIAS44$(ORD(IYALIAS44) EQ (ORD(IYALIAS)+ISCALAR1)),
   IORD_IY(YMODEL) = ORD(IYALIAS44);
));

IY411(Y) = NO;
LOOP((YMODEL, Y)$(IORD_IY(YMODEL) = ORD(Y)),IY411(Y)=yes;);
IY410(Y) = NO;
LOOP((YMODEL, Y)$((IORD_IY(YMODEL) = ORD(Y)) AND (ORD(YMODEL) < CARD(YMODEL))),IY410(Y)=yes;);
IY401(Y) = NO;
LOOP((YMODEL, Y)$((IORD_IY(YMODEL) = ORD(Y)) AND (ORD(YMODEL) > 1)),IY401(Y)=yes;);
IY411FIRST(Y)= NO;
LOOP(IY411$(CARD(IY411FIRST) = 0),  IY411FIRST(IY411)=yes;);

ISCALAR1 = 1;
LOOP(IY411$(ISCALAR1 EQ 1), ISCALAR2 = YVALUE(IY411); ISCALAR1 = 0;);

*-------------------------------------------------------------------------------
* START SIMULATION FOR CURRENT MODEL BB4
*-------------------------------------------------------------------------------


* ------------------------------------------------------------------------------
* Update parameters and bounds for current simulation year:
* ------------------------------------------------------------------------------

*-------------------------------------------------------------------------------
* Set bounds on variables current simulation year
*-------------------------------------------------------------------------------

*---- Bounds on generation technologies: ---------------------------------------

* Generation on existing plants (except inter and intra seasonal storages) is restricted by the capacity (MW) adjusted by GKDERATE:
* (For storages and fluctuating sources (wind, etc.) overwritten later.)

* Complements to equations QGKE_UP and QGKH_UP for the case with no endogenous IGKE and IGKH investments.
VGE_T.UP(IY411,IA,IGDISPATCH(IGKE),S,T)$(GKFX(IY411,IA,IGKE) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGKE))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGKE))) AND (NOT IGESTOALL(IGKE))) = GKFX(IY411,IA,IGKE)*(1$(NOT IGKRATE(IA,IGKE,S,T)) + IGKRATE(IA,IGKE,S,T));
VGH_T.UP(IY411,IA,IGDISPATCH(IGKH),S,T)$(GKFX(IY411,IA,IGKH) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGKH))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGKH))) AND (NOT IGHSTOALL(IGKH))) = GKFX(IY411,IA,IGKH)*(1$(NOT IGKRATE(IA,IGKH,S,T)) + IGKRATE(IA,IGKH,S,T));

$ifi %testbb1234%==yes  IBB1234_VGE_T.UP(IY411,IA,IGDISPATCH(IGKE),S,T)     = VGE_T.UP(IY411,ia,IGKE,s,t);
$ifi %testbb1234%==yes  IBB1234_VGH_T.UP(IY411,IA,IGDISPATCH(IGKE),S,T)     = VGH_T.UP(IY411,ia,IGKE,s,t);
$ifi %testbb1234%==yes  execute_unload "..\..\simex\VGx_up_bb4_1.gdx" IBB1234_VGE_T , IBB1234_VGH_T ;

* Storage loading (MW) and unloading (MW) do not exceed capacity.
* Complements to equations QESTOLOADTLIM and QHSTOLOADTLIM for the case with no endogenous IGESTO and IGHSTO investments.

*Unloading
VGE_T.UP(IY411,IA,IGESTO,S,T)$(GKFX(IY411,IA,IGESTO) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGESTO))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGESTO)))) = GKFX(IY411,IA,IGESTO)*(1$(NOT IGKRATE(IA,IGESTO,S,T)) + IGKRATE(IA,IGESTO,S,T))/GDATA(IGESTO,'GDSTOHUNLD');
VGH_T.UP(IY411,IA,IGHSTO,S,T)$(GKFX(IY411,IA,IGHSTO) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGHSTO))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGHSTO)))) = GKFX(IY411,IA,IGHSTO)*(1$(NOT IGKRATE(IA,IGHSTO,S,T)) + IGKRATE(IA,IGHSTO,S,T))/GDATA(IGHSTO,'GDSTOHUNLD');
VGE_T.UP(IY411,IA,IGESTOS,S,T)$(GKFX(IY411,IA,IGESTOS) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGESTOS))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGESTOS)))) = GKFX(IY411,IA,IGESTOS)*(1$(NOT IGKRATE(IA,IGESTOS,S,T)) + IGKRATE(IA,IGESTOS,S,T))/GDATA(IGESTOS,'GDSTOHUNLD');
VGH_T.UP(IY411,IA,IGHSTOS,S,T)$(GKFX(IY411,IA,IGHSTOS) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGHSTOS))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGHSTOS)))) = GKFX(IY411,IA,IGHSTOS)*(1$(NOT IGKRATE(IA,IGHSTOS,S,T)) + IGKRATE(IA,IGHSTOS,S,T))/GDATA(IGHSTOS,'GDSTOHUNLD');

*Loading
VESTOLOADT.UP(IY411,IA,IGESTO,S,T)$(GKFX(IY411,IA,IGESTO) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGESTO))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGESTO)))) =
  (1$(NOT IGKRATE(IA,IGESTO,S,T)) + IGKRATE(IA,IGESTO,S,T))*GKFX(IY411,IA,IGESTO)/GDATA(IGESTO,'GDSTOHLOAD');
VHSTOLOADT.UP(IY411,IA,IGHSTO,S,T)$(GKFX(IY411,IA,IGHSTO) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGHSTO))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGHSTO)))) =
  (1$(NOT IGKRATE(IA,IGHSTO,S,T)) + IGKRATE(IA,IGHSTO,S,T))*GKFX(IY411,IA,IGHSTO)/GDATA(IGHSTO,'GDSTOHLOAD');
VESTOLOADTS.UP(IY411,IA,IGESTOS,S,T)$(GKFX(IY411,IA,IGESTOS) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGESTOS))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGESTOS)))) =
  (1$(NOT IGKRATE(IA,IGESTOS,S,T)) + IGKRATE(IA,IGESTOS,S,T))*GKFX(IY411,IA,IGESTOS)/GDATA(IGESTOS,'GDSTOHLOAD');
VHSTOLOADTS.UP(IY411,IA,IGHSTOS,S,T)$(GKFX(IY411,IA,IGHSTOS) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGHSTOS))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGHSTOS)))) =
  (1$(NOT IGKRATE(IA,IGHSTOS,S,T)) + IGKRATE(IA,IGHSTOS,S,T))*GKFX(IY411,IA,IGHSTOS)/GDATA(IGHSTOS,'GDSTOHLOAD');

* Storage content does not exceed upper limit (MWh).
* Complements to equations QESTOLOADTLIM and QHSTOLOADTLIM for the case with no endogenous IGESTO and IGHSTO investments.

VESTOVOLT.UP(IY411,IA,IGESTO,S,T)$(GKFX(IY411,IA,IGESTO) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGESTO))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGESTO)))) =
  GKFX(IY411,IA,IGESTO);
VHSTOVOLT.UP(IY411,IA,IGHSTO,S,T)$(GKFX(IY411,IA,IGHSTO) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGHSTO))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGHSTO)))) =
  GKFX(IY411,IA,IGHSTO);

VESTOVOLTS.UP(IY411,IA,IGESTOS,S,T)$(GKFX(IY411,IA,IGESTOS) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGESTOS))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGESTOS)))) =
 GKFX(IY411,IA,IGESTOS);
VHSTOVOLTS.UP(IY411,IA,IGHSTOS,S,T)$(GKFX(IY411,IA,IGHSTOS) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGHSTOS))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGHSTOS)))) =
 GKFX(IY411,IA,IGHSTOS);

$ifi %testbb1234%==yes  IBB1234_VGE_T.UP(IY411,IA,G,S,T)     = VGE_T.UP(IY411,ia,g,s,t);
$ifi %testbb1234%==yes  IBB1234_VGH_T.UP(IY411,IA,G,S,T)     = VGH_T.UP(IY411,ia,g,s,t);
$ifi %testbb1234%==yes  execute_unload "..\..\simex\VGx_up_bb4_2.gdx" IBB1234_VGE_T , IBB1234_VGH_T ;

$ifi %testbb1234%==yes  IBB1234_VGE_T.UP(IY411,IA,G,S,T)     = VGE_T.UP(IY411,ia,g,s,t);
$ifi %testbb1234%==yes  IBB1234_VGH_T.UP(IY411,IA,G,S,T)     = VGH_T.UP(IY411,ia,g,s,t);
$ifi %testbb1234%==yes  execute_unload "..\..\simex\VGx_up_bb4_3.gdx" IBB1234_VGE_T , IBB1234_VGH_T ;

* Existing windpower, hydro-run-of-river, solarpower, solarheat and wavepower can not be dispatched.
* Complement to equation QWNDDISPATCH for the case with no endogenous IGWND investments.
$ifi not %VRESHUTDOWN%==yes VGE_T.FX(IY411,IA,IGWND,S,T)$(GKFX(IY411,IA,IGWND) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGWND))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGWND)))) =
$ifi %VRESHUTDOWN%==yes     VGE_T.UP(IY411,IA,IGWND,S,T)$(GKFX(IY411,IA,IGWND) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGWND))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGWND)))) =
$ifi %WNDFLH_DOL%==AAA        ((WNDFLH(IA)       * GKFX(IY411,IA,IGWND) * (1$(NOT IGKRATE(IA,IGWND,S,T)) + IGKRATE(IA,IGWND,S,T)) * WND_VAR_T(IA,S,T)) / IWND_SUMST(IA))$IWND_SUMST(IA);
$ifi %WNDFLH_DOL%==AAA_GGG    ((WNDFLH(IA,IGWND) * GKFX(IY411,IA,IGWND) * (1$(NOT IGKRATE(IA,IGWND,S,T)) + IGKRATE(IA,IGWND,S,T)) * WND_VAR_T(IA,S,T)) / IWND_SUMST(IA))$IWND_SUMST(IA);
* Complement to equation QHYRRDISPATCH for the case with no endogenous IGHYRR investments.
$ifi not %VRESHUTDOWN%==yes VGE_T.FX(IY411,IA,IGHYRR,S,T)$(GKFX(IY411,IA,IGHYRR) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGHYRR))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGHYRR)))) =
$ifi %VRESHUTDOWN%==yes     VGE_T.UP(IY411,IA,IGHYRR,S,T)$(GKFX(IY411,IA,IGHYRR) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGHYRR))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGHYRR)))) =
   ((WTRRRFLH(IA)* GKFX(IY411,IA,IGHYRR) * (1$(NOT IGKRATE(IA,IGHYRR,S,T)) + IGKRATE(IA,IGHYRR,S,T)) * WTRRRVAR_T(IA,S,T)) / IWTRRRSUM(IA))$IWTRRRSUM(IA);
* Complement to equation QSOLEDISPATCH for the case with no endogenous IGSOLE investments.
$ifi not %VRESHUTDOWN%==yes VGE_T.FX(IY411,IA,IGSOLE,S,T)$(GKFX(IY411,IA,IGSOLE) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGSOLE))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGSOLE)))) =
$ifi %VRESHUTDOWN%==yes     VGE_T.UP(IY411,IA,IGSOLE,S,T)$(GKFX(IY411,IA,IGSOLE) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGSOLE))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGSOLE)))) =
$ifi %SOLEFLH_DOL%==AAA       ((SOLEFLH(IA)        * GKFX(IY411,IA,IGSOLE) * (1$(NOT IGKRATE(IA,IGSOLE,S,T)) + IGKRATE(IA,IGSOLE,S,T)) * SOLE_VAR_T(IA,S,T)) / ISOLESUMST(IA))$ISOLESUMST(IA);
$ifi %SOLEFLH_DOL%==AAA_GGG   ((SOLEFLH(IA,IGSOLE) * GKFX(IY411,IA,IGSOLE) * (1$(NOT IGKRATE(IA,IGSOLE,S,T)) + IGKRATE(IA,IGSOLE,S,T)) * SOLE_VAR_T(IA,S,T)) / ISOLESUMST(IA))$ISOLESUMST(IA);
* Complement to equation QSOLHDISPATCH for the case with no endogenous IGSOLH investments.
$ifi not %VRESHUTDOWN%==yes VGH_T.FX(IY411,IA,IGSOLH,S,T)$(GKFX(IY411,IA,IGSOLH) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGSOLH))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGSOLH)))) =
$ifi %VRESHUTDOWN%==yes     VGH_T.UP(IY411,IA,IGSOLH,S,T)$(GKFX(IY411,IA,IGSOLH) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGSOLH))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGSOLH)))) =
$ifi %SOLHFLH_DOL%==AAA   ((SOLHFLH(IA) * GKFX(IY411,IA,IGSOLH) * (1$(NOT IGKRATE(IA,IGSOLH,S,T)) + IGKRATE(IA,IGSOLH,S,T)) * SOLH_VAR_T(IA,S,T)) / ISOLHSUMST(IA))$ISOLHSUMST(IA);
$ifi %SOLHFLH_DOL%==AAA_GGG   ((SOLHFLH(IA,IGSOLH) * GKFX(IY411,IA,IGSOLH) * (1$(NOT IGKRATE(IA,IGSOLH,S,T)) + IGKRATE(IA,IGSOLH,S,T)) * SOLH_VAR_T(IA,S,T)) / ISOLHSUMST(IA))$ISOLHSUMST(IA);
* Complement to equation QWAVEDISPATCH for the case with no endogenous IGWAVE investments.
$ifi not %VRESHUTDOWN%==yes VGE_T.FX(IY411,IA,IGWAVE,S,T)$(GKFX(IY411,IA,IGWAVE) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGWAVE))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGWAVE)))) =
$ifi %VRESHUTDOWN%==yes     VGE_T.UP(IY411,IA,IGWAVE,S,T)$(GKFX(IY411,IA,IGWAVE) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGWAVE))) AND (NOT (IGDECOMEXOPOT(IY411,IA,IGWAVE)))) =
$ifi %GWAVE_DOL%==AAA   ((WAVEFLH(IA) * GKFX(IY411,IA,IGWAVE) * (1$(NOT IGKRATE(IA,IGWAVE,S,T)) + IGKRATE(IA,IGWAVE,S,T)) * WAVE_VAR_T(IA,S,T)) / IWAVESUMST(IA))$IWAVESUMST(IA);
$ifi %GWAVE_DOL%==AAA_GGG   ((WAVEFLH(IA,IGWAVE) * GKFX(IY411,IA,IGWAVE) * (1$(NOT IGKRATE(IA,IGWAVE,S,T)) + IGKRATE(IA,IGWAVE,S,T)) * WAVE_VAR_T(IA,S,T)) / IWAVESUMST(IA))$IWAVESUMST(IA);

$ifi %testbb1234%==yes  IBB1234_VGE_T.UP(IY411,IA,G,S,T)     = VGE_T.UP(IY411,ia,g,s,t);
$ifi %testbb1234%==yes  IBB1234_VGH_T.UP(IY411,IA,G,S,T)     = VGH_T.UP(IY411,ia,g,s,t);
$ifi %testbb1234%==yes  execute_unload "..\..\simex\VGx_up_bb4_5.gdx" IBB1234_VGE_T , IBB1234_VGH_T ;



*---- End: Bounds on generation technologies -----------------------------------

*---- Bounds on transmission: --------------------------------------------------

* Update bounds:
* Complement to equation QXK_UP for the case with no endogenous transmission investments.
VX_T.UP(IY411,IRE,IRI,S,T)$(IXK_HASORPOT(IY411,IRE,IRI) AND (NOT SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IXKN(Y,IRE,IRI)))) = XKFX(IY411,IRE,IRI)*(1$(NOT IXKRATE(IRE,IRI,S,T))+IXKRATE(IRE,IRI,S,T));


* Set the fixed exchange with third regions:

IX3FX_T(IY411,IR,S,T) = ((X3FX(IY411,IR) * X3FX_VAR_T(IR,S,T)) / IX3FXSUMST(IR))$(IX3FXSUMST(IR) NE 0);


* Electricity transmission between regions within countries and between
* countries may be excluded by the following statement:
* VX_T.FX(IY411,IRE,IRI,S,T)=0;

* Electricity transmission between countries may be excluded
* by the following statement:
* LOOP(C, VX_T.FX(IY411,IRE,IRI,S,T)$(NOT(CCCRRR(C,IRE) AND CCCRRR(C,IRI)))=0);


*---- End Bounds on transmission -----------------------------------------------


*-------------------------------------------------------------------------------
*---- Annual updating wrt. options and add-on parameters: ----------------------
*-------------------------------------------------------------------------------

$include "../../base/addons/_hooks/sim.inc"
$include "../../base/addons/_hooks/varloupfx.inc"


*-------------------------------------------------------------------------------
*---- End: Annual updating wrt. options and add-on parameters: -----------------
*-------------------------------------------------------------------------------

*-------------------------------------------------------------------------------
* End: Set bounds on variables current simulation year
*-------------------------------------------------------------------------------

*------------------------------------------------------------------------------
$ifi %RollingSeasons%==yes * Loop through all the seasons:
$ifi %RollingSeasons%==yes IHOURSINST(SSS,TTT)=0;
$ifi %RollingSeasons%==yes LOOP(IS3LOOPSET$(ORD(IS3LOOPSET) LE (CARD(S)-ROLLINGSEASONSNUMBER+1)),

$ifi %RollingSeasons%==yes * Set the current set of seasons IS3:
$ifi %RollingSeasons%==yes IS3(S)=NO;
$ifi %RollingSeasons%==yes IS3(S)$((ORD(S) LE (ORD(IS3LOOPSET)+ROLLINGSEASONSNUMBER-1)) AND (ORD(S) GE ORD(IS3LOOPSET)) )=YES;
$ifi %RollingSeasons%==yes IS3_NEXT(S)=NO;
$ifi %RollingSeasons%==yes IS3_NEXT(S)$((ORD(S) LE (ORD(IS3LOOPSET)+ROLLINGSEASONSNUMBER)) AND (ORD(S) GE ORD(IS3LOOPSET)) )=YES;
$ifi %RollingSeasons%==yes IS3_ONLYNEXT(S)=NO;
$ifi %RollingSeasons%==yes IS3_ONLYNEXT(S)$((ORD(S) EQ (ORD(IS3LOOPSET)+ROLLINGSEASONSNUMBER)))=YES;

$ifi %RollingSeasons%==yes * Redefinition of IHOURSINT for the current set of season IS3:
$ifi %RollingSeasons%==yes IWEIGHSUMS=SUM(IS3, WEIGHT_S(IS3));
$ifi %RollingSeasons%==yes IHOURSINST(IS3,T)=IOF8760*WEIGHT_S(IS3)*WEIGHT_T(T)/(IWEIGHSUMS*SUM(ITALIAS, WEIGHT_T(ITALIAS)))/IHOURFRAC;

*-------------------------------------------------------------------------------
* SOLVE
*-------------------------------------------------------------------------------

* The Savepoint option must be active especially for BB1 and BB2 since this outputs the     REVISE
* solution basis, which is used for generating results database.
OPTION Savepoint=1;

$ifi not %USEOPTIONFILE%==0 BALBASE4.optfile = %USEOPTIONFILE%;

$ifi %SOLVETYPE%==LP   SOLVE BALBASE4 USING LP   MINIMIZING VOBJ;
$ifi %SOLVETYPE%==RMIP SOLVE BALBASE4 USING RMIP MINIMIZING VOBJ;
$ifi %SOLVETYPE%==MIP  SOLVE BALBASE4 USING MIP  MINIMIZING VOBJ;

$ifi %RollingSeasons%==yes * Fixing relevant variables from previous optimization
$ifi %RollingSeasons%==yes   VHYRS_S.FX(IY411,IA,IS3LOOPSET+1)$(NOT(ORD(IS3LOOPSET) EQ CARD(IS3LOOPSET)) AND SUM(IGHYRS$IAGK_HASORPOT(IY411,IA,IGHYRS),1))=  VHYRS_S.L(IY411,IA,IS3LOOPSET+1);
$ifi %RollingSeasons%==yes   VESTOVOLTS.FX(IY411,IA,IGESTOS,IS3LOOPSET+1,T)$(NOT(ORD(IS3LOOPSET) EQ CARD(IS3LOOPSET)) AND ORD(T) EQ 1 AND IAGK_HASORPOT(IY411,IA,IGESTOS))= VESTOVOLTS.L(IY411,IA,IGESTOS,IS3LOOPSET+1,T);
$ifi %RollingSeasons%==yes   VHSTOVOLTS.FX(IY411,IA,IGHSTOS,IS3LOOPSET+1,T)$(NOT(ORD(IS3LOOPSET) EQ CARD(IS3LOOPSET)) AND ORD(T) EQ 1 AND IAGK_HASORPOT(IY411,IA,IGHSTOS))= VHSTOVOLTS.L(IY411,IA,IGHSTOS,IS3LOOPSET+1,T);

$ifi %RollingSeasons%==yes   $include "../../base/addons/_hooks/sim_rollingseasons.inc"

$ifi %RollingSeasons%==yes * End of loop over seasons:
$ifi %RollingSeasons%==yes   );


$include "../../base/addons/_hooks/solveend.inc"
*-------------------------------------------------------------------------------
* End: SOLVE
*-------------------------------------------------------------------------------

$INCLUDE '../../base/logerror/logerinc/balbase4.mss';


* ------------------------------------------------------------------------------
* --- Verify and Save results --------------------------------------------------
* ------------------------------------------------------------------------------


*-------------------------------------------------------------------------------
*-------------------------------------------------------------------------------
$ifi not %system.filesys%==MSNT $goto endofMSNTmove

$ifi %MERGESAVEPOINTRESULTS%==yes
$ifi %bb4%==yes  putclose  fileMERGESAVEPOINTRESULTSbat 'move "%relpathModel%''BALBASE4_p.gdx" '  '"%relpathModel%%relpathoutput%temp/'IYALIAS.tl:0:0 '.gdx"';
$ifi %MERGESAVEPOINTRESULTS%==yes
$ifi %bb4%==yes  execute  "%batfileMERGESAVEPOINTRESULTS%";

$label endofMSNTmove

$ifi not %system.filesys%==UNIX $goto endofUNIXmove

$ifi %MERGESAVEPOINTRESULTS%==yes
$ifi %bb4%==yes  putclose  fileMERGESAVEPOINTRESULTSbash '#!/bin/bash' / 'mv "%relpathModel%''BALBASE4_p.gdx" "%relpathModel%%relpathoutput%temp/'IYALIAS.tl:0:0 '.gdx"';

$ifi %MERGESAVEPOINTRESULTS%==yes
$ifi %bb4%==yes execute 'chmod +x ./"%bashfileMERGESAVEPOINTRESULTS%"';

$ifi %MERGESAVEPOINTRESULTS%==yes
$ifi %bb4%==yes  execute  "./%bashfileMERGESAVEPOINTRESULTS%";

$label endofUNIXmove
*-------------------------------------------------------------------------------
*-------------------------------------------------------------------------------

* Certain checks may be made on the output:
$INCLUDE '../../base/addons/BB4/errorBB4.inc';


*..............................................................................


* Case specific output printing:
$ifi EXIST 'caseprint.inc' $include 'caseprint.inc';

$ifi %printfiles%==yes $if errorfree $include "../../base/output/printout/printinc/prtbb4.inc";

* ------------------------------------------------------------------------------
* --- End: Verify and Save results ---------------------------------------------
* ------------------------------------------------------------------------------


* ------------------------------------------------------------------------------
* --- Prepare the next BB4 model -----------------------------------------------
* ------------------------------------------------------------------------------

*Fixing the investments and accumulated investments from previous optimization for the next optimization (only the first year of IY411 is fixed)
*(IMPORTANT!: The following code only works if the years are optimized consecutively. For example, this two-year mode optimization would not provide coherent results: [2020,2040] and [2030;2050]
$ifi %TechInvest%==yes         LOOP(Y$(YVALUE(Y) LE YVALUE(IYALIAS)),VGKN.FX(Y,IA,G)$IAGKNY(Y,IA,G)= VGKN.L(Y,IA,G););
$ifi %TechInvest%==yes         VGKNACCUMNET.FX(IY411FIRST,IA,G)$SUM(Y$(YVALUE(Y) LE YVALUE(IY411FIRST)),IAGKNY(Y,IA,G)) = VGKNACCUMNET.L(IY411FIRST,IA,G);
$ifi %TransInvest%==yes        VXKN.FX(IY411FIRST,IRE,IRI)$SUM(Y$(YVALUE(Y) LE YVALUE(IY411FIRST)),IXKN(Y,IRE,IRI))= VXKN.L(IY411FIRST,IRE,IRI);
$ifi %TransInvest%==yes        VXKNACCUMNET.FX(IY411FIRST,IRE,IRI)$SUM(Y$(YVALUE(Y) LE YVALUE(IY411FIRST)),IXKN(Y,IRE,IRI))= VXKNACCUMNET.L(IY411FIRST,IRE,IRI);


$include "../../base/addons/_hooks/varassign.inc"

* ------------------------------------------------------------------------------
* --- End: Prepare the next BB4 model ------------------------------------------
* ------------------------------------------------------------------------------


*------------------------------------------------------------------------------
*                    END OF SIMULATION FOR CURRENT BB4 MODEL
*------------------------------------------------------------------------------
);
*!! LOOP(IYALIAS,...)

*------------------------------------------------------------------------------
*-------------------------------------------------------------------------------
* END: LOOP OVER ALL THE FIRSTYEARS IN ALL MODELS BALBASE4
*-------------------------------------------------------------------------------


*-------------------------------------------------------------------------------
* End of file
*-------------------------------------------------------------------------------


